#apiVersion: lcm.mirantis.com/v1alpha1
#kind: HelmBundle

{%- from 'macros/messaging_service_creds.j2' import messaging_service_creds %}
{%- set service = 'barbican' %}
{%- set stacklight_enabled = spec.get('features', {}).get('stacklight', {}).get('enabled', False) %}
{%- set notification_topics = ['notifications'] %}
{%- do notification_topics.append('stacklight_notifications') if stacklight_enabled %}
{%- set external_notifications_enabled = spec.get('features', {}).get('messaging', {}).get('notifications', {}).get('external', {}).get('enabled', False) %}
{%- if external_notifications_enabled %}
  {%- for topic in spec.get('features', {}).get('messaging', {}).get('notifications', {}).get('external', {}).get('topics', []) %}
    {%- do notification_topics.append(topic) %}
  {%- endfor %}
{%- endif  %}
{%- set barbican_db_cleanup = spec.get('features', {}).get('database', {}).get('cleanup', {}).get('barbican', {'enabled': true}) %}
{%- set cadf_audit = spec.get('features', {}).get('logging', {}).get('cadf', {'enabled': false}) %}
{%- set cadf_audit_driver = spec.get('features', {}).get('logging', {}).get('cadf', {}).get('driver', 'messagingv2') %}

spec:
  releases:
{%- if spec.get('migration', {}).get('barbican', {}).get('deploy_main_service', True) %}
  - name: openstack-barbican
    chart: barbican
    values:
      images:
        tags:
{%- for image in [
    "ks_service",
    "bootstrap",
    "db_drop",
    "barbican_db_sync",
    "barbican_db_purge",
    "image_repo_sync",
    "ks_endpoints",
    "rabbit_init",
    "db_init",
    "dep_check",
    "ks_user",
    "scripted_test",
    "barbican_api",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      conf:
        policy.d:
          01-controller-default.yaml: {{ service_policy }}
          02-custom.yaml: {{ spec.get("features", {}).get("policies", {}).get("barbican", {}) }}
        paste:
          composite:main:
            /v1: barbican-api-keystone-audit
        barbican:
          keystone_authtoken:
            memcache_security_strategy: ENCRYPT
            memcache_secret_key: {{ credentials[0].memcached }}
            {%- if OSVer.train <= OSVer[spec.openstack_version] %}
            service_type: key-manager
            {%- endif %}
{%- if cadf_audit.enabled %}
          audit_middleware_notifications:
            driver: {{ cadf_audit_driver }}
{%- else %}
          audit_middleware_notifications:
            driver: noop
{%- endif %}
          oslo_messaging_notifications:
            driver: messagingv2
            topics: {{ notification_topics|join(',') }}
{% include 'base/_oslo_policy_enforce_defaults.yaml' %}
          DEFAULT:
            sql_idle_timeout: 3600
            sql_max_retries: -1
            sql_retry_interval: 1
            control_exchange: barbican
{%- if spec.get('features', {}).get('barbican', {}).get('backends', {}).get('vault', {}).get('enabled', False) %}
          secretstore:
            enable_multiple_secret_stores: True
            stores_lookup_suffix: software, vault
          secretstore:software:
            secret_store_plugin: store_crypto
            crypto_plugin: simple_crypto
          secretstore:vault:
            secret_store_plugin: vault_plugin
            global_default: True
          simple_crypto_plugin:
            kek: {{ credentials[0].kek }}
          vault_plugin:
            approle_role_id: {{ spec.features.barbican.backends.vault.approle_role_id }}
            approle_secret_id: {{ spec.features.barbican.backends.vault.approle_secret_id }}
            vault_url: {{ spec.features.barbican.backends.vault.vault_url }}
            use_ssl: {{ spec.features.barbican.backends.vault.use_ssl }}
    {%- if spec.features.barbican.backends.vault.ssl_ca_crt_file is defined %}
            ssl_ca_crt_file: {{ spec.features.barbican.backends.vault.ssl_ca_crt_file }}
    {%- endif %}
    {%- if spec.features.barbican.backends.vault.kv_mountpoint is defined %}
            kv_mountpoint: {{ spec.features.barbican.backends.vault.kv_mountpoint }}
    {%- endif %}
    {%- if spec.features.barbican.backends.vault.namespace is defined %}
            namespace: {{ spec.features.barbican.backends.vault.namespace }}
    {%- endif %}

{%- else %}
          secretstore:
            enabled_secretstore_plugins: store_crypto
          crypto:
            enabled_crypto_plugins: simple_crypto
          simple_crypto_plugin:
            kek: {{ credentials[0].kek }}
{%- endif %}
        logging:
          logger_barbican:
            level: {{ spec.get('features', {}).get('logging', {}).get('barbican', {}).get('level', 'INFO') }}
{%- if spec.features.network_policies.enabled %}
      network_policy:
{% include 'base/network_policies/key-manager.yaml' %}
{%- endif %}
      manifests:
        cron_job_db_purge: true
        network_policy: {{ spec.features.network_policies.enabled }}
        job_rabbit_init: false
        secret_ca_bundle: true
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_admin_identity.yaml' %}
{% include 'base/_cache.yaml' %}
        oslo_db:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            barbican:
              username: {{ credentials[0].database.user.username }}
              password: {{ credentials[0].database.user.password }}
{% include 'base/_messaging_shared.yaml' %}
{% include 'base/_notifications.yaml' %}
        key_manager:
          host_fqdn_override:
            public:
              host: barbican.{{ spec.public_domain_name }}
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
{%- if proxy_settings is defined %}
{%- if proxy_settings.get("proxy_ca_certificate") %}
{{ proxy_settings["proxy_ca_certificate"] | indent( width=18, first=True) }}
{%- endif %}
{%- endif %}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          hosts:
            admin:
              host: barbican-api
            default: barbican
            internal: barbican-api
            public:
              host: barbican
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          port:
            api:
              admin: 9311
              default: 80
              internal: 9311
              public: 443
          scheme:
            default: http
            public: https
      jobs:
{% include 'base/_ks_jobs.yaml' %}
        db_purge:
          enabled: {{ barbican_db_cleanup.enabled }}
          cron: {{ barbican_db_cleanup.get("schedule", "1 4 * * 1") }}
          script:
            config:
              age: {{ barbican_db_cleanup.get("age", 30) }}
{%- endif %}
