[tox]
minversion = 3.1
skipdist = True
envlist = pep8,py38
# Automatic envs (pyXX) will only use the python version appropriate to that
# env and ignore basepython inherited from [testenv] if we set
# ignore_basepython_conflict.
ignore_basepython_conflict = True

[testenv]
basepython = python3
usedevelop = True
install_command = bash {toxinidir}/tox_install.sh {opts} {packages}
allowlist_externals =
    find
    kubectl
    bash
    mkdocs
deps =
    .[test]
setenv =
    # TODO(vsaienko): figure out why not working with default
    SETUPTOOLS_ENABLE_FEATURES="legacy-editable"
    NODE_IP="127.0.0.1"
    OSCTL_LOGGING_CONF_FILE={toxinidir}/etc/rockoon/logging.conf
commands =
    pytest {posargs:tests rockoon/osctl/tests/unit -vv -n auto}

[testenv:coverage]
commands =
    pytest --cov=rockoon tests {posargs}

[testenv:pep8]
# using black for code style, so ignore pycodestyle violations from flake8
commands =
    flake8 rockoon tests
    black --check --diff rockoon tests

[testenv:black]
envdir={toxworkdir}/pep8
# actually format code with black
# run flake8 just in case afterwards
commands =
    black rockoon tests
    flake8 rockoon tests

[testenv:docs]
envdir = {toxworkdir}/docs
deps =
    -r{toxinidir}/docs/requirements.txt
commands = mkdocs build -d docs_build

[testenv:dev-docs]
envdir = {toxworkdir}/docs
deps =
    -r{toxinidir}/docs/requirements.txt
commands = mkdocs serve

[testenv:releasenotes]
envdir = {toxworkdir}/docs
deps=
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/docs/requirements.txt
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:dev]
deps =
    .
setenv =
    PYTHONWARNINGS=ignore:Unverified HTTPS request
    OSCTL_LOGGING_CONF_FILE={toxinidir}/etc/rockoon/logging.conf
    HELM_CHARTS_DIR={toxinidir}/charts/
passenv =
    HOME
    KOPF_*
    KUBECONFIG
    PYTHONASYNCIODEBUG
    OSCTL_*
    OSDPL_*
    NODE_IP
    HELM_CHARTS_DIR
whitelist_externals =
    find
    bash
    kubectl
    helm
commands =
    # TODO(vsaienko): run in the same way as in production.
    find {toxinidir}/rockoon -type f -name '*.pyc' -delete
    bash {toxinidir}/tools/run_with_service_account.sh

[testenv:network-policies-update]
deps =
    .
commands =
    {basepython} {toxinidir}/tools/regenerate_policy_outputs.py

[testenv:functional]
# NOTE(vsaienko): Running tests require
# - kubeconfig
# - clouds.yaml will be filled automatically
# - access to kubernetes services internal IPs
# - resolution for DNS names of kubernetes services
changedir =  {toxinidir}/rockoon/tests
passenv =
    KUBECONFIG
setenv =
  OSCTL_LOGGING_CONF_FILE={toxinidir}/etc/rockoon/logging.conf
  OS_CLIENT_CONFIG_FILE=/tmp/clouds_functional.yaml
  OS_CLOUD=admin
commands =
    bash {toxinidir}/tools/get_service_account.sh
    bash {toxinidir}/tools/fill_internal_svc_ips.sh
    bash {toxinidir}/tools/get_os_clouds.sh
    pytest {posargs}

[flake8]
extend-ignore = E,W
