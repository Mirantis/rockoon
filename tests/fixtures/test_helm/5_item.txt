Error: UPGRADE FAILED: cannot patch "cinder-bootstrap" with kind Job: Job.batch "cinder-bootstrap" is invalid: spec.template: Invalid value: core.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"application":"cinder", "component":"bootstrap", "controller-uid":"e76923ae-fce0-49bb-9ff6-becd507d638d", "job-name":"cinder-bootstrap", "release_group":"openstack-cinder"}, Annotations:map[string]string{"openstackhelm.openstack.org/release_uuid":""}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:core.PodSpec{Volumes:[]core.Volume{core.Volume{Name:"pod-tmp", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc010d97b80), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"bootstrap-script", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(0xc035138f00), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"etc-service", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc010d97bc0), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"bootstrap-conf", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(0xc035138f40), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}}, InitContainers:[]core.Container{core.Container{Name:"init", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/extra/kubernetes-entrypoint:v1.0.0-20200311160233", Command:[]string{"kubernetes-entrypoint"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"POD_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc010d97ce0)}, core.EnvVar{Name:"NAMESPACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc010d97d60)}, core.EnvVar{Name:"INTERFACE_NAME", Value:"eth0", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"PATH", Value:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_SERVICE", Value:"openstack:keystone-api,openstack:cinder-api", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_DAEMONSET", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CONTAINER", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_POD_JSON", Value:"[{\"labels\":{\"application\":\"cinder\",\"component\":\"volume\"},\"requireSameNode\":false}]", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CUSTOM_RESOURCE", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(0xc005b84720), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]core.Container{core.Container{Name:"bootstrap", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/heat:ussuri-bionic-20211206091341", Command:[]string{"/bin/bash", "-c", "/tmp/bootstrap.sh"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"NODE_IP", Value:"", ValueFrom:(*core.EnvVarSource)(0xc010d97f20)}, core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc010d97f60)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc010d97fa0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc010d97fc0)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc010d97fe0)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc012df8000)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc012df8020)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc012df8040)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc012df8060)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc012df8080)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc012df80a0)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"bootstrap-script", ReadOnly:true, MountPath:"/tmp/bootstrap.sh", SubPath:"bootstrap.sh", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"etc-service", ReadOnly:false, MountPath:"/etc/cinder", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"bootstrap-conf", ReadOnly:true, MountPath:"/etc/cinder/cinder.conf", SubPath:"cinder.conf", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"bootstrap-conf", ReadOnly:true, MountPath:"/etc/cinder/logging.conf", SubPath:"logging.conf", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]core.EphemeralContainer(nil), RestartPolicy:"OnFailure", TerminationGracePeriodSeconds:(*int64)(0xc0300ddeb0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{"openstack-control-plane":"enabled"}, ServiceAccountName:"cinder-bootstrap", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", SecurityContext:(*core.PodSecurityContext)(0xc017dcee80), ImagePullSecrets:[]core.LocalObjectReference(nil), Hostname:"", Subdomain:"", SetHostnameAsFQDN:(*bool)(nil), Affinity:(*core.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]core.Toleration(nil), HostAliases:[]core.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), PreemptionPolicy:(*core.PreemptionPolicy)(nil), DNSConfig:(*core.PodDNSConfig)(nil), ReadinessGates:[]core.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), Overhead:core.ResourceList(nil), EnableServiceLinks:(*bool)(nil), TopologySpreadConstraints:[]core.TopologySpreadConstraint(nil)}}: field is immutable && cannot patch "cinder-db-init" with kind Job: Job.batch "cinder-db-init" is invalid: spec.template: Invalid value: core.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"application":"cinder", "component":"db-init", "controller-uid":"539db857-2ed6-4375-93bb-3474b6ac68e6", "job-name":"cinder-db-init", "release_group":"openstack-cinder"}, Annotations:map[string]string{"openstackhelm.openstack.org/release_uuid":""}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:core.PodSpec{Volumes:[]core.Volume{core.Volume{Name:"pod-tmp", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc00ad12f60), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"db-init-sh", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(0xc03487fdc0), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"etc-service", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc00ad12fa0), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolum2021-12-10T04:27:44.445238126Z eSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"db-init-conf", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(0xc03487fe00), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}}, InitContainers:[]core.Container{core.Container{Name:"init", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/extra/kubernetes-entrypoint:v1.0.0-20200311160233", Command:[]string{"kubernetes-entrypoint"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"POD_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc00ad13660)}, core.EnvVar{Name:"NAMESPACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc00ad136a0)}, core.EnvVar{Name:"INTERFACE_NAME", Value:"eth0", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"PATH", Value:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_SERVICE", Value:"openstack:mariadb", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_JOBS", Value:"openstack-mariadb-cluster-wait", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_DAEMONSET", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CONTAINER", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_POD_JSON", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CUSTOM_RESOURCE", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(0xc02ff94b40), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]core.Container{core.Container{Name:"cinder-db-init-0", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/heat:ussuri-bionic-20211206091341", Command:[]string{"/tmp/db-init.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"ROOT_DB_CONNECTION", Value:"", ValueFrom:(*core.EnvVarSource)(0xc00ad13840)}, core.EnvVar{Name:"OPENSTACK_CONFIG_FILE", Value:"/etc/cinder/cinder.conf", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OPENSTACK_CONFIG_DB_SECTION", Value:"database", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OPENSTACK_CONFIG_DB_KEY", Value:"connection", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"db-init-sh", ReadOnly:true, MountPath:"/tmp/db-init.py", SubPath:"db-init.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"etc-service", ReadOnly:false, MountPath:"/etc/cinder", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"db-init-conf", ReadOnly:true, MountPath:"/etc/cinder/cinder.conf", SubPath:"cinder.conf", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"db-init-conf", ReadOnly:true, MountPath:"/etc/cinder/logging.conf", SubPath:"logging.conf", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]core.EphemeralContainer(nil), RestartPolicy:"OnFailure", TerminationGracePeriodSeconds:(*int64)(0xc03fb3acf0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{"openstack-control-plane":"enabled"}, ServiceAccountName:"cinder-db-init", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", SecurityContext:(*core.PodSecurityContext)(0xc0351d2e00), ImagePullSecrets:[]core.LocalObjectReference(nil), Hostname:"", Subdomain:"", SetHostnameAsFQDN:(*bool)(nil), Affinity:(*core.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]core.Toleration(nil), HostAliases:[]core.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), PreemptionPolicy:(*core.PreemptionPolicy)(nil), DNSConfig:(*core.PodDNSConfig)(nil), ReadinessGates:[]core.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), Overhead:core.ResourceList(nil), EnableServiceLinks:(*bool)(nil), TopologySpreadConstraints:[]core.TopologySpreadConstraint(nil)}}: field is immutable && cannot patch "cinder-drop-default-volume-type" with kind Job: Job.batch "cinder-drop-default-volume-type" is invalid: spec.template: Invalid value: core.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"application":"cinder", "component":"drop-default-volume-type", "controller-uid":"d7350025-fad0-4955-aea7-59601edef5da", "job-name":"cinder-drop-default-volume-type", "release_group":"openstack-cinder"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:core.PodSpec{Volumes:[]core.Volume{core.Volume{Name:"pod-tmp", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc015e7ee20), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"drop-default-volume-type-py", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(0xc00d867600), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}}, InitContainers:[]core.Container{core.Container{Name:"init", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/extra/kubernetes-entrypoint:v1.0.0-20200311160233", Command:[]string{"kubernetes-entrypoint"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"POD_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7ef20)}, core.EnvVar{Name:"NAMESPACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7ef60)}, core.EnvVar{Name:"INTERFACE_NAME", Value:"eth0", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"PATH", Value:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_SERVICE", Value:"openstack:keystone-api,openstack:cinder-api", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_DAEMONSET", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CONTAINER", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_POD_JSON", Value:"[{\"labels\":{\"application\":\"cinder\",\"component\":\"volume\"},\"requireSameNode\":false}]", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CUSTOM_RESOURCE", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(0xc036aed080), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]core.Container{core.Container{Name:"drop-default-volume-type", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/drop-default-volume-type.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f0c0)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f0e0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f100)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f120)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f140)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f160)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f180)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f1a0)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f1c0)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f1e0)}, core.EnvVar{Name:"SERVICE_OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f220)}, core.EnvVar{Name:"SERVICE_OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f240)}, core.EnvVar{Name:"SERVICE_OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f280)}, core.EnvVar{Name:"SERVICE_OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f2a0)}, core.EnvVar{Name:"SERVICE_OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f2c0)}, core.EnvVar{Name:"SERVICE_OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc015e7f2e0)}, core.EnvVar{Name:"SERVICE_OS_ROLES", Value:"admin", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"drop-default-volume-type-py", ReadOnly:true, MountPath:"/tmp/drop-default-volume-type.py", SubPath:"drop-default-volume-type.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]core.EphemeralContainer(nil), RestartPolicy:"OnFailure", TerminationGracePeriodSeconds:(*int64)(0xc034acab28), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{"openstack-control-plane":"enabled"}, ServiceAccountName:"cinder-drop-default-volume-type", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", SecurityContext:(*core.PodSecurityContext)(0xc023d7b100), ImagePullSecrets:[]core.LocalObjectReference(nil), Hostname:"", Subdomain:"", SetHostnameAsFQDN:(*bool)(nil), Affinity:(*core2021-12-10T04:27:44.445238126Z .Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]core.Toleration(nil), HostAliases:[]core.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), PreemptionPolicy:(*core.PreemptionPolicy)(nil), DNSConfig:(*core.PodDNSConfig)(nil), ReadinessGates:[]core.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), Overhead:core.ResourceList(nil), EnableServiceLinks:(*bool)(nil), TopologySpreadConstraints:[]core.TopologySpreadConstraint(nil)}}: field is immutable && cannot patch "cinder-ks-endpoints" with kind Job: Job.batch "cinder-ks-endpoints" is invalid: spec.template: Invalid value: core.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"application":"cinder", "component":"ks-endpoints", "controller-uid":"f9085c6c-e709-4696-b1e7-de13779e28a4", "job-name":"cinder-ks-endpoints", "release_group":"openstack-cinder"}, Annotations:map[string]string{"openstackhelm.openstack.org/release_uuid":""}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:core.PodSpec{Volumes:[]core.Volume{core.Volume{Name:"pod-tmp", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc02d45e4a0), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"ks-endpoints-py", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(0xc0056c8380), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}}, InitContainers:[]core.Container{core.Container{Name:"init", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/extra/kubernetes-entrypoint:v1.0.0-20200311160233", Command:[]string{"kubernetes-entrypoint"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"POD_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e5a0)}, core.EnvVar{Name:"NAMESPACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e600)}, core.EnvVar{Name:"INTERFACE_NAME", Value:"eth0", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"PATH", Value:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_SERVICE", Value:"openstack:keystone-api", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_JOBS", Value:"cinder-ks-service", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_DAEMONSET", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CONTAINER", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_POD_JSON", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CUSTOM_RESOURCE", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(0xc045886780), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]core.Container{core.Container{Name:"volumev2-ks-endpoints-admin", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-endpoints.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e740)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e760)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e780)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e7a0)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e7c0)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e7e0)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e800)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e820)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e840)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e860)}, core.EnvVar{Name:"OS_SVC_ENDPOINT", Value:"admin", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv2", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev2", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_ENDPOINT", Value:"http://cinder-api.openstack.svc.cluster.local:8776/v2/%!((MISSING)tenant_id)s", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-endpoints-py", ReadOnly:true, MountPath:"/tmp/ks-endpoints.py", SubPath:"ks-endpoints.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, core.Container{Name:"volumev2-ks-endpoints-internal", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-endpoints.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e980)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e9a0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e9c0)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45e9e0)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ea00)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ea20)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ea40)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ea60)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ea80)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45eaa0)}, core.EnvVar{Name:"OS_SVC_ENDPOINT", Value:"internal", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv2", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev2", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_ENDPOINT", Value:"http://cinder-api.openstack.svc.cluster.local:8776/v2/%!((MISSING)tenant_id)s", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-endpoints-py", ReadOnly:true, MountPath:"/tmp/ks-endpoints.py", SubPath:"ks-endpoints.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, core.Container{Name:"volumev2-ks-endpoints-public", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-endpoints.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45eba0)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ebc0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ebe0)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ec00)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ec20)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ec40)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ec60)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ec80)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45eca0)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ecc0)}, core.EnvVar{Name:"OS_SVC_ENDPOINT", Value:"public", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv2", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev2", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_ENDPOINT", Value:"https://cinder.it.just.works/v2/%!((MISSING)tenant_id)s", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-endpoints-py", ReadOnly:true, MountPath:"/tmp/ks-endpoints.py", SubPath:"ks-endpoints.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, core.Container{Name:"volumev3-ks-endpoints-admin", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-endpoints.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45edc0)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45eea0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45eec0)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45eee0)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ef00)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ef20)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ef40)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ef60)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45ef80)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45efa0)}, core.EnvVar{Name:"OS_SVC_ENDPOINT", Value:"admin", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_ENDPOINT", Value:"http://cinder-api.openstack.svc.cluster.local:8776/v3/%!((MISSING)tenant_id)s", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-endpoints-py", ReadOnly:true, MountPath:"/tmp/ks-endpoints.py", SubPath:"ks-endpoints.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", Terminati2021-12-10T04:27:44.445238126Z onMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, core.Container{Name:"volumev3-ks-endpoints-internal", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-endpoints.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f0a0)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f0c0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f0e0)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f100)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f120)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f140)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f160)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f180)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f1a0)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f1c0)}, core.EnvVar{Name:"OS_SVC_ENDPOINT", Value:"internal", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_ENDPOINT", Value:"http://cinder-api.openstack.svc.cluster.local:8776/v3/%!((MISSING)tenant_id)s", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-endpoints-py", ReadOnly:true, MountPath:"/tmp/ks-endpoints.py", SubPath:"ks-endpoints.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, core.Container{Name:"volumev3-ks-endpoints-public", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-endpoints.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f2e0)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f300)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f320)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f340)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f360)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f380)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f3c0)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f3e0)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f400)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02d45f420)}, core.EnvVar{Name:"OS_SVC_ENDPOINT", Value:"public", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_ENDPOINT", Value:"https://cinder.it.just.works/v3/%!((MISSING)tenant_id)s", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-endpoints-py", ReadOnly:true, MountPath:"/tmp/ks-endpoints.py", SubPath:"ks-endpoints.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]core.EphemeralContainer(nil), RestartPolicy:"Never", TerminationGracePeriodSeconds:(*int64)(0xc00dde0618), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{"openstack-control-plane":"enabled"}, ServiceAccountName:"cinder-ks-endpoints", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", SecurityContext:(*core.PodSecurityContext)(0xc0152c4b80), ImagePullSecrets:[]core.LocalObjectReference(nil), Hostname:"", Subdomain:"", SetHostnameAsFQDN:(*bool)(nil), Affinity:(*core.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]core.Toleration(nil), HostAliases:[]core.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), PreemptionPolicy:(*core.PreemptionPolicy)(nil), DNSConfig:(*core.PodDNSConfig)(nil), ReadinessGates:[]core.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), Overhead:core.ResourceList(nil), EnableServiceLinks:(*bool)(nil), TopologySpreadConstraints:[]core.TopologySpreadConstraint(nil)}}: field is immutable && cannot patch "cinder-ks-service" with kind Job: Job.batch "cinder-ks-service" is invalid: spec.template: Invalid value: core.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"application":"cinder", "component":"ks-service", "controller-uid":"aef16e8c-2c71-4e9d-8904-8d48384c4876", "job-name":"cinder-ks-service", "release_group":"openstack-cinder"}, Annotations:map[string]string{"openstackhelm.openstack.org/release_uuid":""}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:core.PodSpec{Volumes:[]core.Volume{core.Volume{Name:"pod-tmp", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc01b17d0a0), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"ks-service-py", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(0xc0308bd380), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}}, InitContainers:[]core.Container{core.Container{Name:"init", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/extra/kubernetes-entrypoint:v1.0.0-20200311160233", Command:[]string{"kubernetes-entrypoint"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"POD_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d1a0)}, core.EnvVar{Name:"NAMESPACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d1e0)}, core.EnvVar{Name:"INTERFACE_NAME", Value:"eth0", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"PATH", Value:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_SERVICE", Value:"openstack:keystone-api", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_DAEMONSET", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CONTAINER", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_POD_JSON", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CUSTOM_RESOURCE", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(0xc01fb4f980), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]core.Container{core.Container{Name:"volumev2-ks-service-registration", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-service.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d320)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d340)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d360)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d380)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d3a0)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d3c0)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d3e0)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d480)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d4a0)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d4c0)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv2", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev2", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-service-py", ReadOnly:true, MountPath:"/tmp/ks-service.py", SubPath:"ks-service.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, core.Container{Name:"volumev3-ks-service-registration", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211206091341", Command:[]string{"/tmp/ks-service.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d5c0)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d5e0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d600)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d620)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d640)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d660)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d680)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d6a0)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d6c0)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc01b17d6e0)}, core.EnvVar{Name:"OS_SERVICE_NAME", Value:"cinderv3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_SERVICE_TYPE", Value:"volumev3", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"ks-service-py", ReadOnly:true, MountPath:"/tmp/ks-service.py", SubPath:"ks-service.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(2021-12-10T04:27:44.445238126Z nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]core.EphemeralContainer(nil), RestartPolicy:"Never", TerminationGracePeriodSeconds:(*int64)(0xc0302bec68), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{"openstack-control-plane":"enabled"}, ServiceAccountName:"cinder-ks-service", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", SecurityContext:(*core.PodSecurityContext)(0xc04bb3ba00), ImagePullSecrets:[]core.LocalObjectReference(nil), Hostname:"", Subdomain:"", SetHostnameAsFQDN:(*bool)(nil), Affinity:(*core.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]core.Toleration(nil), HostAliases:[]core.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), PreemptionPolicy:(*core.PreemptionPolicy)(nil), DNSConfig:(*core.PodDNSConfig)(nil), ReadinessGates:[]core.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), Overhead:core.ResourceList(nil), EnableServiceLinks:(*bool)(nil), TopologySpreadConstraints:[]core.TopologySpreadConstraint(nil)}}: field is immutable
