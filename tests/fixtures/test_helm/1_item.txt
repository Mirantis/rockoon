Error: UPGRADE FAILED: cannot patch "cinder-create-internal-tenant" with kind Job: Job.batch "cinder-create-internal-tenant" is invalid: spec.template: Invalid value: core.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"application":"cinder", "component":"create-internal-tenant", "controller-uid":"02ab956c-3751-4661-9abc-1d85289e6c16", "job-name":"cinder-create-internal-tenant", "release_group":"openstack-cinder"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:core.PodSpec{Volumes:[]core.Volume{core.Volume{Name:"pod-tmp", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(0xc02bce6e20), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(nil), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}, core.Volume{Name:"create-internal-tenant-py", VolumeSource:core.VolumeSource{HostPath:(*core.HostPathVolumeSource)(nil), EmptyDir:(*core.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*core.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*core.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*core.GitRepoVolumeSource)(nil), Secret:(*core.SecretVolumeSource)(nil), NFS:(*core.NFSVolumeSource)(nil), ISCSI:(*core.ISCSIVolumeSource)(nil), Glusterfs:(*core.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*core.PersistentVolumeClaimVolumeSource)(nil), RBD:(*core.RBDVolumeSource)(nil), Quobyte:(*core.QuobyteVolumeSource)(nil), FlexVolume:(*core.FlexVolumeSource)(nil), Cinder:(*core.CinderVolumeSource)(nil), CephFS:(*core.CephFSVolumeSource)(nil), Flocker:(*core.FlockerVolumeSource)(nil), DownwardAPI:(*core.DownwardAPIVolumeSource)(nil), FC:(*core.FCVolumeSource)(nil), AzureFile:(*core.AzureFileVolumeSource)(nil), ConfigMap:(*core.ConfigMapVolumeSource)(0xc0271bcb80), VsphereVolume:(*core.VsphereVirtualDiskVolumeSource)(nil), AzureDisk:(*core.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*core.PhotonPersistentDiskVolumeSource)(nil), Projected:(*core.ProjectedVolumeSource)(nil), PortworxVolume:(*core.PortworxVolumeSource)(nil), ScaleIO:(*core.ScaleIOVolumeSource)(nil), StorageOS:(*core.StorageOSVolumeSource)(nil), CSI:(*core.CSIVolumeSource)(nil), Ephemeral:(*core.EphemeralVolumeSource)(nil)}}}, InitContainers:[]core.Container{core.Container{Name:"init", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/extra/kubernetes-entrypoint:v1.0.0-20200311160233", Command:[]string{"kubernetes-entrypoint"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"POD_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce6f20)}, core.EnvVar{Name:"NAMESPACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce6f60)}, core.EnvVar{Name:"INTERFACE_NAME", Value:"eth0", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"PATH", Value:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_SERVICE", Value:"openstack:keystone-api", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_DAEMONSET", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CONTAINER", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_POD_JSON", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"DEPENDENCY_CUSTOM_RESOURCE", Value:"", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(0xc011e7cf00), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]core.Container{core.Container{Name:"create-internal-tenant", Image:"docker-dev-kaas-local.docker.mirantis.net/openstack/openstack-tools:ussuri-bionic-20211115060025", Command:[]string{"/tmp/create-internal-tenant.py"}, Args:[]string(nil), WorkingDir:"", Ports:[]core.ContainerPort(nil), EnvFrom:[]core.EnvFromSource(nil), Env:[]core.EnvVar{core.EnvVar{Name:"OS_IDENTITY_API_VERSION", Value:"3", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"OS_AUTH_URL", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce70c0)}, core.EnvVar{Name:"OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce70e0)}, core.EnvVar{Name:"OS_INTERFACE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7100)}, core.EnvVar{Name:"OS_ENDPOINT_TYPE", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7120)}, core.EnvVar{Name:"OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7140)}, core.EnvVar{Name:"OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7160)}, core.EnvVar{Name:"OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7180)}, core.EnvVar{Name:"OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce71a0)}, core.EnvVar{Name:"OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce71c0)}, core.EnvVar{Name:"OS_DEFAULT_DOMAIN", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce71e0)}, core.EnvVar{Name:"SERVICE_OS_SERVICE_NAME", Value:"cinder", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"INTERNAL_PROJECT_NAME", Value:"internal_cinder", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"INTERNAL_USER_NAME", Value:"internal_cinder", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"CINDER_NAMESPACE", Value:"openstack", ValueFrom:(*core.EnvVarSource)(nil)}, core.EnvVar{Name:"SERVICE_OS_REGION_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7220)}, core.EnvVar{Name:"SERVICE_OS_PROJECT_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7240)}, core.EnvVar{Name:"SERVICE_OS_PROJECT_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7260)}, core.EnvVar{Name:"SERVICE_OS_USER_DOMAIN_NAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce7280)}, core.EnvVar{Name:"SERVICE_OS_USERNAME", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce72a0)}, core.EnvVar{Name:"SERVICE_OS_PASSWORD", Value:"", ValueFrom:(*core.EnvVarSource)(0xc02bce72c0)}, core.EnvVar{Name:"SERVICE_OS_ROLES", Value:"admin", ValueFrom:(*core.EnvVarSource)(nil)}}, Resources:core.ResourceRequirements{Limits:core.ResourceList(nil), Requests:core.ResourceList(nil)}, VolumeMounts:[]core.VolumeMount{core.VolumeMount{Name:"pod-tmp", ReadOnly:false, MountPath:"/tmp", SubPath:"", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}, core.VolumeMount{Name:"create-internal-tenant-py", ReadOnly:true, MountPath:"/tmp/create-internal-tenant.py", SubPath:"create-internal-tenant.py", MountPropagation:(*core.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]core.VolumeDevice(nil), LivenessProbe:(*core.Probe)(nil), ReadinessProbe:(*core.Probe)(nil), StartupProbe:(*core.Probe)(nil), Lifecycle:(*core.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*core.SecurityContext)(0xc011e7cfc0), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]core.EphemeralContainer(nil), RestartPolicy:"OnFailure", TerminationGracePeriodSeconds:(*int64)(0xc030e900e8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{"openstack-control-plane":"enabled"}, ServiceAccountName:"cinder-create-internal-tenant", AutomountServiceAccountToken:(*bool)(nil), NodeName:"", SecurityContext:(*core.PodSecurityContext)(0xc02981a880), ImagePullSecrets:[]core.LocalObjectReference(nil), Hostname:"", Subdomain:"", SetHostnameAsFQDN:(*bool)(nil), Affinity:(*core.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]core.Toleration(nil), HostAliases:[]core.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), PreemptionPolicy:(*core.PreemptionPolicy)(nil), DNSConfig:(*core.PodDNSConfig)(nil), ReadinessGates:[]core.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), Overhead:core.ResourceList(nil), EnableServiceLinks:(*bool)(nil), TopologySpreadConstraints:[]core.TopologySpreadConstraint(nil)}}: field is immutable
