openstack_version: ussuri
features:
  policies:
    strict_admin:
      enabled: true
    aodh:
      aodh_custom: value
    barbican:
      barbican_custom: value
    cinder:
      cinder_custom: value
    designate:
      designate_custom: value
    glance:
      glance_custom: value
    gnocchi:
      gnocchi_custom: value
    heat:
      heat_custom: value
    octavia:
      octavia_custom: value
    keystone:
      keystone_custom: value
    masakari:
      masakari_custom: value
    neutron:
      neutron_custom: value
    nova:
      nova_custom: value
    panko:
      panko_custom: value
    placement:
      placement_custom: value
  barbican:
    backends:
      vault:
        approle_role_id: e5e97952-cf82-e7fd-da71-c568f18cea5e
        approle_secret_id: e33841c6-f175-1ea1-87ba-2dd49df6f776
        enabled: true
        use_ssl: false
        vault_url: http://vault.openstack-vault.svc:8200
  database:
    local_volumes:
      enabled: true
  messaging:
    components_with_dedicated_messaging:
    - networking
  network_policies:
    enabled: false
  neutron:
    backend: ml2
    dns_servers:
    - 10.172.1.100
    external_networks:
    - bridge: br-ex
      interface: veth-phy
      mtu: null
      network_types:
      - flat
      physnet: physnet1
      vlan_ranges: null
    floating_network:
      enabled: true
      physnet: physnet1
      subnet:
        gateway: 10.11.12.39
        pool_end: 10.11.12.200
        pool_start: 10.11.12.100
        range: 10.11.12.0/24
    tunnel_interface: ens3
  octavia:
    lb_network:
      name: lb-service-management
      subnets:
      - range: '192.168.0.0/24'
        pool_start: '192.168.0.1'
        pool_end: '192.168.0.254'
  nova:
    images:
      backend: local
    live_migration_interface: ens3
  services:
  - block-storage
  - compute
  - dns
  - identity
  - dashboard
  - image
  - ingress
  - database
  - memcached
  - networking
  - orchestration
  - messaging
  - load-balancer
  - placement
  - coordination
  - key-manager
  - redis
  - instance-ha
  ssl:
    public_endpoints:
      api_cert: "TEST CRT"
      api_key: "TEST KEY"
      ca_cert: "TEST CA"
      enabled: true
  stacklight:
    enabled: true
    user:
      password: stacklight
      username: stacklight
artifacts:
  binary_base_url: https://artifactory.mcp.mirantis.net/binary-dev-kaas-local
  images_base_url: docker-dev-kaas-local.docker.mirantis.net
common:
  charts: {}
  infra:
    repo: osh-infra
  openstack:
    repo: osh
persistent_volume_storage_class: mirablock-k8s-block-hdd
public_domain_name: it.just.works
internal_domain_name: cluster.local
local_volume_storage_class: lvp-fake-root
