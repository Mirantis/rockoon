---
- name: Get binary name
  set_fact:
    mirror_binary_name: "{{ url_for_mirror | regex_replace('^.*/(.*)$', '\\1') }}"

- name: Get binary path
  set_fact:
    mirror_binary_path: "{{ url_for_mirror | replace(rvl_binary_public_base_url + '/', '') | replace('/' + mirror_binary_name, '') }}"

- name: "Create a directory {{ rvl_registry_binaries_dir }}/{{ mirror_binary_path }} if it does not exist"
  ansible.builtin.file:
    path: "{{ rvl_registry_binaries_dir }}/{{ mirror_binary_path }}"
    state: directory
    mode: '0755'

- name: "Check if file {{ mirror_binary_name }}  exists locally"
  ansible.builtin.stat:
    path: "{{ rvl_registry_binaries_dir }}/{{ mirror_binary_path }}/{{ mirror_binary_name }}"
  register: file_stat

- name: "Download binary {{ mirror_binary_name }}"
  ansible.builtin.get_url:
    url: "{{ url_for_mirror }}"
    dest: "{{ rvl_registry_binaries_dir }}/{{ mirror_binary_path }}/{{ mirror_binary_name }}"
    timeout: 900
    mode: 0644
  when: not file_stat.stat.exists
