---
- name: Create temporary directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  loop:
    - "{{ rvl_tmp_path }}"

- name: Set image name for Rockoon
  set_fact:
    mirror_rockoon_image: "{{ rvl_images_public_base_url }}/openstack/rockoon:{{ rvl_images_build_tag }}"

- name: Create Rockoon container
  community.docker.docker_container:
    name: rockoon
    auto_remove: true
    detach: true
    command: cat
    pull: true
    tty: true
    image: "{{ mirror_rockoon_image }}"
    volumes:
      - "{{ rvl_tmp_path }}:/data"

- name: Get path for Rockoon deirectory
  community.docker.docker_container_exec:
    container: rockoon
    command: python3 -c 'import os,rockoon; print(os.path.dirname(rockoon.__file__))'
    chdir: /root
  register: container_rockoon_path

- name: Get artifacts.yaml
  community.docker.docker_container_exec:
    container: rockoon
    command: "cp -f {{ container_rockoon_path.stdout }}/templates/{{ rvl_osdpl_openstack_version }}/artifacts.yaml /data/"
    chdir: /root

- name: Remove Rockoon container
  community.docker.docker_container:
    name: rockoon
    state: absent

- name: Render artifacts.yaml template
  set_fact:
    mirror_rockoon_artifacts: "{{ lookup('template', rvl_tmp_path + '/artifacts.yaml') | from_yaml | dict2items | community.general.json_query('[*].value') | unique }}"
  vars:
    images_base_url: "{{ rvl_images_public_base_url }}"
    binary_base_url: "{{ rvl_binary_public_base_url }}"
