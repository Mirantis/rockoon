---
- name: Get Rockoon artifacts for mirroring
  ansible.builtin.include_tasks:
    file: mirror/get_artifacts.yaml
  when: rvl_mirror_images or rvl_mirror_binaries

- block:
  - name: Extract Docker images list from Rockoon artifacts
    set_fact:
      mirror_images: "{{ mirror_rockoon_artifacts | select('match', '^' + rvl_images_public_base_url + '.*') }}"

  - name: Create images mirror in local registry
    ansible.builtin.include_tasks:
      file: mirror/mirror_image_each.yaml
    loop: "{{ [mirror_rockoon_image] + mirror_images + rvl_mirror_images_extra }}"
    loop_control:
      loop_var: image_for_mirror
  when: rvl_mirror_images

- block:
  - name: Extract binary urls list from Rockoon artifacts
    set_fact:
      mirror_binaries: "{{ mirror_rockoon_artifacts | select('match', '^' + rvl_binary_public_base_url + '.*') }}"

  - name: Caching binaries to local registry
    ansible.builtin.include_tasks:
      file: mirror/mirror_binary_each.yaml
    loop: "{{ mirror_binaries }}"
    loop_control:
      loop_var: url_for_mirror
  when: rvl_mirror_binaries

- block:
  - name: Predict Rockoon chart source URL by target address
    set_fact:
      rvl_mirror_rockoon_chart: "{{ rvl_chart_ref_rockoon | replace(rvl_registry_binary_url, rvl_binary_public_base_url) }}"

  - name: Caching charts to local folder
    ansible.builtin.include_tasks:
      file: mirror/mirror_binary_each.yaml
    loop: "{{ [rvl_mirror_rockoon_chart] + rvl_mirror_charts_extra }}"
    loop_control:
      loop_var: url_for_mirror
  when: rvl_mirror_charts
