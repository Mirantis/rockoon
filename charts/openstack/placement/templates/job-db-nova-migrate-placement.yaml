{{/*
Copyright 2019 Intel Corporation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.job_db_nova_migrate_placement }}
{{- $envAll := . -}}
{{- $serviceName := "placement" -}}
{{- $nodeSelector := dict $envAll.Values.labels.job.node_selector_key $envAll.Values.labels.job.node_selector_value -}}
{{- $configMapBin := printf "%s-%s" $serviceName "bin" -}}
{{- $configMapEtc := printf "%s-%s" $serviceName "etc" -}}
{{- $podEnvVars := index . "podEnvVars" | default false -}}
{{- $dbMigrateSettings :=  dict "configFile" (printf "/etc/%s/%s.conf" $serviceName $serviceName ) "logConfigFile" (printf "/etc/%s/logging.conf" $serviceName ) "image" ( index $envAll.Values.images.tags ( printf "%s_db_nova_migrate_placement" $serviceName )) -}}
{{- $backoffLimit := index . "backoffLimit" | default "6" -}}
{{- $activeDeadlineSeconds := index . "activeDeadlineSeconds" -}}
{{- $serviceNamePretty := $serviceName | replace "_" "-" -}}

{{- $serviceAccountName := printf "%s-%s" $serviceNamePretty "db-nova-migrate-placement" }}
{{ tuple $envAll "db_nova_migrate_placement" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s" $serviceNamePretty "db-nova-migrate-placement" | quote }}
spec:
  backoffLimit: {{ $backoffLimit }}
{{- if $activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ $activeDeadlineSeconds }}
{{- end }}
  template:
    metadata:
      labels:
{{ tuple $envAll $serviceName "db-nova-migrate-placement" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      restartPolicy: Never
      nodeSelector:
{{ toYaml $nodeSelector | indent 8 }}
      initContainers:
{{ tuple $envAll "db_nova_migrate_placement" list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
      containers:
        - name: {{ printf "%s-%s" $serviceNamePretty "db-nova-migrate-placement" | quote }}
          image: {{ $dbMigrateSettings.image | quote }}
          imagePullPolicy: {{ $envAll.Values.images.pull_policy | quote }}
{{ tuple $envAll $envAll.Values.pod.resources.jobs.db_nova_migrate_placement | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          env:
            - name: PLACEMENT_DB_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: {{ index $envAll.Values.secrets.oslo_db "placement" }}
                  key: DB_CONNECTION
            - name: NOVA_API_DB_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: {{ index $envAll.Values.secrets.nova_api_db "nova" }}
                  key: DB_CONNECTION
          command:
            - /tmp/db-nova-migrate-placement.sh
            - --migrate
            - '-'
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: db-nova-migrate-placement-sh
              mountPath: /tmp/db-nova-migrate-placement.sh
              subPath: db-nova-migrate-placement.sh
              readOnly: true
            - name: etc-service
              mountPath: {{ dir $dbMigrateSettings.configFile | quote }}
            - name: db-nova-migrate-placement-conf
              mountPath: {{ $dbMigrateSettings.configFile | quote }}
              subPath: {{ base $dbMigrateSettings.configFile | quote }}
              readOnly: true
            - name: db-nova-migrate-placement-conf
              mountPath: {{ $dbMigrateSettings.logConfigFile | quote }}
              subPath: {{ base $dbMigrateSettings.logConfigFile | quote }}
              readOnly: true
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: db-nova-migrate-placement-sh
          configMap:
            name: {{ $configMapBin | quote }}
            defaultMode: 504
        - name: etc-service
          emptyDir: {}
        - name: db-nova-migrate-placement-conf
          secret:
            secretName: {{ $configMapEtc | quote }}
            defaultMode: 416
{{- end }}
