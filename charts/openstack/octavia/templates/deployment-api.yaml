{{/*
Copyright 2019 Samsung Electronics Co., Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- define "octaviaDriverAgentReadynessProbeTemplate" }}
exec:
  command:
    - python
    - /tmp/health-probe.py
    - --config-file
    - /etc/octavia/octavia.conf
    - --probe-type
    - readiness
    - --process-name
    - octavia-driver-agent
    - --check
    - unix_sockets
    - --path
    - /var/run/octavia/status.sock
    - --path
    - /var/run/octavia/get.sock
    - --path
    - /var/run/octavia/stats.sock
{{- end }}

{{- define "octaviaDriverAgentLivenessProbeTemplate" }}
exec:
  command:
    - python
    - /tmp/health-probe.py
    - --config-file
    - /etc/octavia/octavia.conf
    - --probe-type
    - liveness
    - --process-name
    - octavia-driver-agent
    - --check
    - unix_sockets
    - --path
    - /var/run/octavia/status.sock
    - --path
    - /var/run/octavia/get.sock
    - --path
    - /var/run/octavia/stats.sock
  {{- if ( has "ovn" .Values.network.backend ) }}
    - --check
    - k8s_svc_ip_change
    - --k8s-svcs
    - {{ tuple "ovn_db" "internal" . | include "helm-toolkit.endpoints.endpoint_host_lookup" | quote }}
  {{- end }}
{{- end }}

{{- define "octaviaApiProbeTemplate" }}
exec:
  command:
    - curl
    - --fail
    - http://localhost:{{ tuple "load_balancer" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
{{- end }}

{{- if .Values.manifests.deployment_api }}
{{- $envAll := . }}

{{- $mounts_octavia_api := .Values.pod.mounts.octavia_api.octavia_api }}
{{- $mounts_octavia_api_init := .Values.pod.mounts.octavia_api.init_container }}

{{- $serviceAccountName := "octavia-api" }}
{{ tuple $envAll "api" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: octavia-api
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
  labels:
{{ tuple $envAll "octavia" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  replicas: {{ .Values.pod.replicas.api }}
  selector:
    matchLabels:
{{ tuple $envAll "octavia" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
{{ tuple $envAll | include "helm-toolkit.snippets.kubernetes_upgrades_deployment" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "octavia" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
        endpoints-hash: {{ .Values.endpoints | include "helm-toolkit.utils.get_hash" }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
{{ dict "envAll" $envAll "application" "octavia_api" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      affinity:
{{ tuple $envAll "octavia" "api" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.labels.api.node_selector_key }}: {{ .Values.labels.api.node_selector_value }}
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.api.timeout | default "30" }}
      initContainers:
{{ tuple $envAll "api" $mounts_octavia_api_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
{{ tuple $envAll "octavia" "octavia_api" | include "helm-toolkit.snippets.kubernetes_cacert_init_container" | indent 8 }}
      containers:
        - name: octavia-api
{{ tuple $envAll "octavia_api" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.api | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "octavia_api" "container" "octavia_api" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
            - name: REQUESTS_CA_BUNDLE
              value: /certs/ca-bundle.pem
          command:
            - /tmp/octavia-api.sh
            - start
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/octavia-api.sh
                  - stop
          ports:
            - name: o-api
              containerPort: {{ tuple "load_balancer" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
{{ dict "envAll" $envAll "component" "octavia_api" "container" "octavia_api" "type" "readiness" "probeTemplate" (include "octaviaApiProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
{{ dict "envAll" $envAll "component" "octavia_api" "container" "octavia_api" "type" "liveness" "probeTemplate" (include "octaviaApiProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
          volumeMounts:
{{ dict "envAll" $envAll "objectType" "mountpoint" "secretPrefix" "octavia" | include "helm-toolkit.snippets.kubernetes_ssl_objects" | indent 12 }}
            - name: pod-etc-octavia
              mountPath: /etc/octavia
            - name: octavia-bin
              mountPath: /tmp/octavia-api.sh
              subPath: octavia-api.sh
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/octavia.conf
              subPath: octavia.conf
              readOnly: true
            - name: octavia-etc
              mountPath: {{ .Values.conf.octavia.DEFAULT.log_config_append }}
              subPath: {{ base .Values.conf.octavia.DEFAULT.log_config_append }}
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/api_audit_map.conf
              subPath: api_audit_map.conf
              readOnly: true
            - name: wsgi-octavia
              mountPath: /var/www/cgi-bin/octavia
            - name: octavia-etc
              mountPath: {{ .Values.conf.software.apache2.conf_dir }}/wsgi-octavia.conf
              subPath: wsgi-octavia.conf
              readOnly: true
{{- if .Values.conf.security }}
            - name: octavia-etc
              mountPath: {{ .Values.conf.software.apache2.conf_dir }}/security.conf
              subPath: security.conf
              readOnly: true
{{- end }}
            - name: octavia-etc
              mountPath: /etc/apache2/ports.conf
              subPath: ports.conf
              readOnly: true
{{- if .Values.manifests.octavia_driver_agent }}
            - name: octavia-driver
              mountPath: /var/run/octavia
{{- end }}
            - name: logs-apache
              mountPath: /var/log/apache2
            - name: run-apache
              mountPath: /var/run/apache2
            - name: octavia-oslo-policy
              mountPath: /etc/octavia/policy.d/
            - name: octavia-certs
              mountPath: /etc/octavia/certs/private/cakey.pem
              subPath: key
            - name: octavia-certs
              mountPath: /etc/octavia/certs/ca_01.pem
              subPath: cert
            - name: octavia-certs
              mountPath: /etc/octavia/certs/client.pem
              subPath: cert_all
{{ if $mounts_octavia_api.volumeMounts }}{{ toYaml $mounts_octavia_api.volumeMounts | indent 12 }}{{ end }}
{{- if .Values.manifests.octavia_driver_agent }}
        # octavia_driver_agent should run along with octavia API as octavia API
        # access socket files from /var/run/octavia created by driver agent
        - name: octavia-driver-agent
{{ tuple $envAll "octavia_driver_agent" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.driver_agent | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "octavia_api" "container" "octavia_driver_agent" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
            - name: REQUESTS_CA_BUNDLE
              value: /certs/ca-bundle.pem
{{ dict "envAll" $envAll "component" "octavia_api" "container" "octavia_driver_agent" "type" "liveness" "probeTemplate" (include "octaviaDriverAgentLivenessProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
{{ dict "envAll" $envAll "component" "octavia_api" "container" "octavia_driver_agent" "type" "readiness" "probeTemplate" (include "octaviaDriverAgentReadynessProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
          command:
            - /tmp/octavia-driver-agent.sh
            - start
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/octavia-driver-agent.sh
                  - stop
          volumeMounts:
{{ dict "envAll" $envAll "objectType" "mountpoint" "secretPrefix" "octavia" | include "helm-toolkit.snippets.kubernetes_ssl_objects" | indent 12 }}
            - name: pod-etc-octavia
              mountPath: /etc/octavia
            - name: octavia-bin
              mountPath: /tmp/octavia-driver-agent.sh
              subPath: octavia-driver-agent.sh
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/octavia.conf
              subPath: octavia.conf
              readOnly: true
            - name: octavia-driver
              mountPath: /var/run/octavia
            - name: octavia-bin
              mountPath: /tmp/health-probe.py
              subPath: health-probe.py
              readOnly: true
            - name: octavia-etc
              mountPath: {{ .Values.conf.octavia.DEFAULT.log_config_append }}
              subPath: {{ base .Values.conf.octavia.DEFAULT.log_config_append }}
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/api_audit_map.conf
              subPath: api_audit_map.conf
              readOnly: true
            - name: octavia-certs
              mountPath: /etc/octavia/certs/private/cakey.pem
              subPath: key
            - name: octavia-certs
              mountPath: /etc/octavia/certs/ca_01.pem
              subPath: cert
            - name: octavia-certs
              mountPath: /etc/octavia/certs/client.pem
              subPath: cert_all
{{- end }}
      volumes:
{{ dict "envAll" $envAll "objectType" "volume" "secretPrefix" "octavia" | include "helm-toolkit.snippets.kubernetes_ssl_objects" | indent 8 }}
        - name: pod-etc-octavia
          emptyDir: {}
        - name: wsgi-octavia
          emptyDir: {}
        - name: logs-apache
          emptyDir: {}
        - name: run-apache
          emptyDir: {}
{{- if .Values.manifests.octavia_driver_agent }}
        - name: octavia-driver
          emptyDir: {}
{{- end }}
        - name: octavia-bin
          configMap:
            name: octavia-bin
            defaultMode: 504
        - name: octavia-etc
          secret:
            secretName: octavia-etc
            defaultMode: 416
        - name: octavia-oslo-policy
          secret:
            secretName: octavia-oslo-policy
            defaultMode: 416
        - name: octavia-certs
          secret:
            secretName: octavia-certs
            defaultMode: 416
{{ if $mounts_octavia_api.volumes }}{{ toYaml $mounts_octavia_api.volumes | indent 8 }}{{ end }}
{{- end }}
