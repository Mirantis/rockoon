{{/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.job_ensure_resources }}
{{- $envAll := . }}
{{- $serviceAccountName := "drb-controller-resources" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": "before-hook-creation"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $serviceAccountName }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
rules:
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [get, create, patch]
  - apiGroups: [zalando.org]
    resources: [clusterkopfpeerings]
    verbs: [get, create, patch]
  - apiGroups: [zalando.org]
    resources: [kopfpeerings]
    verbs: [get, create, patch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $serviceAccountName }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": "before-hook-creation"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $serviceAccountName }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/name: drb-controller
    helm.sh/chart: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  name: drb-controller-ensure-resources
spec:
  backoffLimit: {{ .Values.jobs.ensure_resources.backoffLimit }}
  completions: 1
  parallelism: 1
  template:
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      restartPolicy: OnFailure
{{ dict "envAll" $envAll "application" "ensure_resources" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      nodeSelector:
        {{ .Values.labels.ensure_resources.node_selector_key }}: {{ .Values.labels.ensure_resources.node_selector_value | quote }}
      containers:
        - name: main
{{ tuple $envAll "rockoon" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ dict "envAll" $envAll "application" "ensure_resources" "container" "main" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.jobs.ensure_resources | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          command:
            - osctl-ensure-shared-resources
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/resources
            name: deploy-resources-bin
            readOnly: true
      volumes:
      - name: deploy-resources-bin
        configMap:
          name: drb-controller-deploy-resources-bin
          defaultMode: 360
{{- end }}
