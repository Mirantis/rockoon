# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
images:
  tags:
    strongswan: docker.io/vimagick/strongswan:latest
    dep_check: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
    image_repo_sync: docker.io/docker:17.07.0
  pull_policy: IfNotPresent
  local_registry:
    active: false
    exclude:
      - dep_check
      - image_repo_sync

dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs:
          - strongswan-image-repo-sync
        services:
          - endpoint: node
            service: local_image_registry
  static:
    image_repo_sync:
      services:
        - endpoint: internal
          service: local_image_registry
    server:
      jobs: null

labels:
  server:
    node_selector_key: openvswitch
    node_selector_value: enabled
  job:
    node_selector_key: openvswitch
    node_selector_value: enabled

endpoints:
  cluster_domain_suffix: cluster.local
  local_image_registry:
    name: docker-registry
    namespace: docker-registry
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    host_fqdn_override:
      default: null
    port:
      registry:
        node: 5000

network_policy: {}

pod:
  dns_policy: "ClusterFirstWithHostNet"
  lifecycle:
    upgrades:
      daemonsets:
        pod_replacement_strategy: RollingUpdate
        server:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
  resources:
    enabled: false
    server:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    jobs:
      image_repo_sync:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
  probes:
    strongswan:
      strongswan:
        readiness:
          enabled: true
          params:
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
        liveness:
          enabled: true
          params:
            initialDelaySeconds: 5
            periodSeconds: 3600
            timeoutSeconds: 5
            failureThreshold: 3
conf:
  ipsec:
    config setup:
      uniqueids: 'yes'
    conn %default:
      keyingtries: '%forever'
      type: transport
      keyexchange: ikev2
      auto: route
      ike: aes256gcm16-sha256-modp2048
      esp: aes256gcm16-modp2048
      authby: psk
      mobike: 'no'
    conn vxlan-in:
      leftsubnet: '0.0.0.0/0[udp/4790]'
      rightsubnet: '%dynamic[udp]'
    conn vxlan-out:
      leftsubnet: '0.0.0.0/0[udp]'
      rightsubnet: '%dynamic[udp/4790]'
  strongswan:
    charon:
      plugins:
        kernel-netlink:
          set_proto_port_transport_sa: 'yes'
          xfrm_acq_expires: 10
  ipsec_secrets:
    config:
      type: psk
      key: openstack
    template: |
      : {{ .Values.conf.ipsec_secrets.config.type | upper }} {{ .Values.conf.ipsec_secrets.config.key }}

manifests:
  configmap_etc: true
  configmap_bin: true
  daemonset: true
  network_policy: false
  job_image_repo_sync: true
...
