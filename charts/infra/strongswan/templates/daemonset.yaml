{{/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- define "healthProbe" }}
exec:
  command:
    - "true"
{{- end }}

{{- define "strongswan.daemonset" }}
{{- $daemonset := index . 0 }}
{{- $configMapName := index . 1 }}
{{- $serviceAccountName := index . 2 }}
{{- $envAll := index . 3 }}
{{- with $envAll }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $serviceAccountName }}
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
  namespace: {{ $envAll.Release.Namespace }}
  labels:
{{ tuple $envAll $daemonset "server" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  selector:
    matchLabels:
{{ tuple $envAll $daemonset "server" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
  template:
    metadata:
      labels:
{{ tuple $envAll $daemonset "server" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      hostNetwork: true
      dnsPolicy: {{ $envAll.Values.pod.dns_policy }}
      nodeSelector:
        {{ .Values.labels.server.node_selector_key }}: {{ .Values.labels.server.node_selector_value | quote }}
      initContainers:
{{ tuple $envAll "server" list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
      containers:
        - name: strongswan
{{ tuple $envAll "strongswan" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.server | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" . "component" "strongswan" "container" "strongswan" "type" "readiness" "probeTemplate" (include "healthProbe" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
{{ dict "envAll" . "component" "strongswan" "container" "strongswan" "type" "liveness" "probeTemplate" (include "healthProbe" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            readOnlyRootFilesystem: true
            runAsUser: 0
          command:
            - /tmp/strongswan.sh
          volumeMounts:
            - name: strongswan-bin
              mountPath: /tmp/strongswan.sh
              readOnly: true
              subPath: strongswan.sh
            - mountPath: /tmp
              name: pod-tmp
            - mountPath: /etc/ipsec.d/ipsec.conf
              name: strongswan-etc
              readOnly: true
              subPath: ipsec.conf
            - mountPath: /etc/ipsec.d/ipsec.secrets
              name: strongswan-etc
              readOnly: true
              subPath: ipsec.secrets
            - mountPath: /etc/strongswan.d/openstack.conf
              name: strongswan-etc
              readOnly: true
              subPath: openstack.conf
            - mountPath: /var
              name: pod-var
          {{- if eq $envAll.Values.conf.ipsec_secrets.config.type "rsa" }}
            - mountPath: /etc/ipsec.d/cacerts/openstack.pem
              name: certs
              readOnly: true
              subPath: ca.crt
            - mountPath: /etc/ipsec.d/certs/openstack.pem
              name: certs
              readOnly: true
              subPath: tls.crt
            - mountPath: /etc/ipsec.d/private/openstack.pem
              name: certs
              readOnly: true
              subPath: tls.key
          {{- end }}
      volumes:
        - name: strongswan-etc
          secret:
            secretName: {{ $configMapName }}
            defaultMode: 292
        - name: pod-tmp
          emptyDir: {}
        - name: pod-var
          emptyDir: {}
        - name: strongswan-bin
          configMap:
            name: strongswan-bin
            defaultMode: 365
      {{- if eq $envAll.Values.conf.ipsec_secrets.config.type "rsa" }}
        - name: certs
          secret:
            defaultMode: 420
            secretName: neutron-tls-public
      {{- end }}
{{- end }}
{{- end }}

{{- if .Values.manifests.daemonset }}
{{- $envAll := . }}
{{- $daemonset := "strongswan" }}
{{- $configMapName := "strongswan-etc" }}
{{- $serviceAccountName := "strongswan" }}

{{ tuple $envAll "server" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
{{- $configmap_yaml := "strongswan.configmap.etc" }}
{{/* Prefer using .Values.overrides rather than .Values.conf.overrides */}}
{{- list $daemonset "strongswan.daemonset" $serviceAccountName $configmap_yaml $configMapName "strongswan.configmap.bin" "strongswan-bin" . | include "helm-toolkit.utils.daemonset_overrides_root" }}
{{- end }}
